import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.BsJ0pqcO.js";const E=JSON.parse('{"title":"常用库","description":"","frontmatter":{},"headers":[],"relativePath":"blog/js/packages.md","filePath":"blog/js/packages.md"}'),t={name:"blog/js/packages.md"},h=e(`<h1 id="常用库" tabindex="-1">常用库 <a class="header-anchor" href="#常用库" aria-label="Permalink to &quot;常用库&quot;">​</a></h1><h2 id="lodash-es" tabindex="-1">lodash-es <a class="header-anchor" href="#lodash-es" aria-label="Permalink to &quot;lodash-es&quot;">​</a></h2><p><a href="https://www.npmjs.com/package/lodash-es" target="_blank" rel="noreferrer">lodash-es</a> 是 lodash 的 ESM 版本，支持了构建工具的 <a href="https://webpack.docschina.org/guides/tree-shaking/" target="_blank" rel="noreferrer">tree shaking</a> 功能。</p><p>常用函数：</p><ul><li><code>throttle</code>：节流。</li><li><code>debounce</code>：防抖。</li><li><code>once</code>：创建一个只执行一次的函数。</li><li><code>pick</code>：从对象挑选中挑选若干属性。</li><li><code>groupBy</code>：分组。</li><li><code>get</code>：安全获取一个对象的属性，例如：<code>get(obj, &#39;a.b[0].c&#39;)</code>。</li></ul><h2 id="radash" tabindex="-1">radash <a class="header-anchor" href="#radash" aria-label="Permalink to &quot;radash&quot;">​</a></h2><p>lodash 对于现代 web 开发已经稍显老旧，很多函数随着 ES 版本不断更新已经不再被需要，对于新版 ES 的功能也没有更好的支持。</p><p><a href="https://www.radash.wiki/" target="_blank" rel="noreferrer">radash</a> 是一个零依赖、模块化、高性能的 JS/TS 实用工具库，去除了 lodash 中已经过时的函数，新增了很多呼声较高的实用函数，对现代 web 开发更友好。</p><p>常用函数：</p><ul><li><code>throttle</code>：节流。</li><li><code>debounce</code>：防抖。</li><li><code>pick</code>：从对象挑选中挑选若干属性。</li><li><code>get</code>：安全获取一个对象的属性，例如：<code>get(obj, &#39;a.b[0].c&#39;)</code>。</li><li><code>tryit</code>：将函数转为错误优先的函数。<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { tryit } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;radash&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tryit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(axios.get)(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/users&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><code>retry</code>：对异步函数添加重试功能。<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { retry } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;radash&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// getServerData 请求失败，自动重试，最大重试次数为 5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> retry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ times: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, getServerData)</span></span></code></pre></div></li><li><code>guard</code>：若异步函数出错，返回 undefined。<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { tryit } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;radash&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> guard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(getServerData)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">??</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span></span></code></pre></div></li></ul><h2 id="xijs" tabindex="-1">xijs <a class="header-anchor" href="#xijs" aria-label="Permalink to &quot;xijs&quot;">​</a></h2><p><a href="https://www.npmjs.com/package/xijs" target="_blank" rel="noreferrer">xijs</a> 是一个偏向处理业务的工具库。</p><p>常用函数：</p><ul><li><code>transformTree</code>：数组转树。</li><li><code>transformArray</code>：树转数组。</li><li><code>hex2rgba</code>：HEX 颜色转 rgb 格式。</li><li><code>url2obj</code>：url 的 query 参数转为对象。</li><li><code>regexp</code>： 常用正则表达式。<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { regexp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;xijs&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regexp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;phoneRegexp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;13322223333&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 验证手机号</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regexp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;emailRegexp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;foo@bar.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 验证邮箱</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">regexp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;idRegexp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;12343414314134&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 验证身份证号</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ···</span></span></code></pre></div></li></ul>`,14),l=[h];function n(p,k,r,d,o,c){return a(),i("div",null,l)}const y=s(t,[["render",n]]);export{E as __pageData,y as default};
