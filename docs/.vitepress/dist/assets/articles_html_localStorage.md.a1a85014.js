import{_ as a,o as s,c as o,Q as e}from"./chunks/framework.ea234428.js";const g=JSON.parse('{"title":"localStorage","description":"","frontmatter":{},"headers":[],"relativePath":"articles/html/localStorage.md","filePath":"articles/html/localStorage.md"}'),l={name:"articles/html/localStorage.md"},t=e(`<h1 id="localstorage" tabindex="-1">localStorage <a class="header-anchor" href="#localstorage" aria-label="Permalink to &quot;localStorage&quot;">​</a></h1><p><code>localStorage</code> 是 HTML5 中引入的一个 Web Storage 技术，用于在浏览器中存储键值对的数据。它提供了一种简单的方法，让开发者能够在客户端存储和获取数据，而不需要使用服务器或数据库。</p><p>以下是关于 <code>localStorage</code> 的一些重要信息：</p><h2 id="存储数据" tabindex="-1">存储数据 <a class="header-anchor" href="#存储数据" aria-label="Permalink to &quot;存储数据&quot;">​</a></h2><p>使用 <code>localStorage.setItem(key, value)</code> 方法来存储数据，其中 <code>key</code> 是数据的键，<code>value</code> 是对应的值。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">localStorage.</span><span style="color:#B392F0;">setItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;john&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">localStorage.</span><span style="color:#B392F0;">setItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;score&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;100&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">localStorage.</span><span style="color:#6F42C1;">setItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;john&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">localStorage.</span><span style="color:#6F42C1;">setItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;score&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="获取数据" tabindex="-1">获取数据 <a class="header-anchor" href="#获取数据" aria-label="Permalink to &quot;获取数据&quot;">​</a></h2><p>使用 <code>localStorage.getItem(key)</code> 方法可以根据键获取存储的数据。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">username</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> localStorage.</span><span style="color:#B392F0;">getItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;username&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">score</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> localStorage.</span><span style="color:#B392F0;">getItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;score&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">username</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> localStorage.</span><span style="color:#6F42C1;">getItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;username&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">score</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> localStorage.</span><span style="color:#6F42C1;">getItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;score&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="删除数据" tabindex="-1">删除数据 <a class="header-anchor" href="#删除数据" aria-label="Permalink to &quot;删除数据&quot;">​</a></h2><p>使用 <code>localStorage.removeItem(key)</code> 方法可以删除特定键的数据。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">localStorage.</span><span style="color:#B392F0;">removeItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;score&quot;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">localStorage.</span><span style="color:#6F42C1;">removeItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;score&quot;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="清空所有数据" tabindex="-1">清空所有数据 <a class="header-anchor" href="#清空所有数据" aria-label="Permalink to &quot;清空所有数据&quot;">​</a></h2><p>使用 <code>localStorage.clear()</code> 方法可以清空所有存储的数据。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">localStorage.</span><span style="color:#B392F0;">clear</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">localStorage.</span><span style="color:#6F42C1;">clear</span><span style="color:#24292E;">();</span></span></code></pre></div><h2 id="限制和注意事项" tabindex="-1">限制和注意事项 <a class="header-anchor" href="#限制和注意事项" aria-label="Permalink to &quot;限制和注意事项&quot;">​</a></h2><ul><li><p><code>localStorage</code> 存储的数据在同一个域名下的不同页面之间是共享的。不同域名或不同协议（如 HTTP 和 HTTPS）之间的页面无法共享存储。</p></li><li><p><code>localStorage</code> 存储的数据会一直保留在客户端，直到被清除，因此需要注意不要存储过多的敏感信息。</p></li><li><p><code>localStorage</code> 存储的数据是以字符串形式存储的，因此需要手动将复杂的数据结构（如对象或数组）转换为字符串再存储。</p></li><li><p><code>localStorage</code> 在大多数现代浏览器中得到支持，但在某些情况下可能会受到浏览器隐私模式或设置的限制。</p></li></ul><h2 id="sessionstorage" tabindex="-1">sessionStorage <a class="header-anchor" href="#sessionstorage" aria-label="Permalink to &quot;sessionStorage&quot;">​</a></h2><p><code>sessionStorage</code> 是 HTML5 中的另一种 Web Storage 技术，类似于 <code>localStorage</code>，用于在浏览器中存储键值对的数据。不同之处在于，<code>sessionStorage</code> 存储的数据在同一个浏览器会话期间是有效的，当会话结束（页签被关闭）时，数据将被清除</p>`,19),n=[t];function p(c,r,i,d,E,y){return s(),o("div",null,n)}const h=a(l,[["render",p]]);export{g as __pageData,h as default};
