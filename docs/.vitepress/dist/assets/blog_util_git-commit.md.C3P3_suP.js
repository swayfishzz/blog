import{_ as s,c as t,o as a,a4 as i}from"./chunks/framework.BsJ0pqcO.js";const u=JSON.parse('{"title":"Git 提交规范","description":"","frontmatter":{},"headers":[],"relativePath":"blog/util/git-commit.md","filePath":"blog/util/git-commit.md"}'),n={name:"blog/util/git-commit.md"},e=i(`<h1 id="git-提交规范" tabindex="-1">Git 提交规范 <a class="header-anchor" href="#git-提交规范" aria-label="Permalink to &quot;Git 提交规范&quot;">​</a></h1><p>使用 git 提交代码时，使用良好的提交信息能够帮助团队成员更好地理解代码变更的原因和内容。</p><p>这些规范是基于软件开发社区多年来的最佳实践逐渐形成和发展起来的。<a href="https://github.com/angular/angular.js" target="_blank" rel="noreferrer">AngularJS</a> 在 github 上 的提交记录被业内许多人认可，逐渐被大家引用。</p><p>格式：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scope): subject</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Body</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BREAKING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CHANGE:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">closes</span></span></code></pre></div><h2 id="规范" tabindex="-1">规范 <a class="header-anchor" href="#规范" aria-label="Permalink to &quot;规范&quot;">​</a></h2><ul><li><strong>type</strong> 必填，类型：本次提交的类型，通常为以下值之一。 <table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>feat</td><td>新功能（feature）</td></tr><tr><td>fix</td><td>修复 bug（bug fix）</td></tr><tr><td>docs</td><td>文档改动（documentation）</td></tr><tr><td>style</td><td>代码格式修改，不影响代码运行的变动</td></tr><tr><td>refactor</td><td>重构</td></tr><tr><td>perf</td><td>性能优化</td></tr><tr><td>test</td><td>增加测试</td></tr><tr><td>chore</td><td>修改构建流程、辅助工具/依赖库的增加</td></tr><tr><td>build</td><td>构建</td></tr><tr><td>revert</td><td>回滚</td></tr></tbody></table></li><li><strong>scope</strong> 可选，范围：指定本地更改影响的范围。</li><li><strong>subject</strong> 必填，主题：对改动的简短描述。</li><li><strong>body</strong> 可选，详细描述：对改动的详细描述。</li><li><strong>BREAKING CHANGE</strong> 可选，破坏性变更：对以往版本的某些功能产生影响，不再兼容之前的版本。</li><li><strong>closes</strong> 可选，关闭 bug：针对 issue 的 bug 修复，使用此字段指出修复的 bug。</li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p><strong>新增功能</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;feat(user): 添加用户登录功能&quot;</span></span></code></pre></div><p><strong>修复 bug</strong></p><p>其中 #123 为 bug 的编号，通常为仓库 issue 或禅道 bug 的编号。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;fix(user): 修复用户登录问题</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">closes #123&quot;</span></span></code></pre></div><p><strong>完整示例</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;feat(user): 添加用户权限功能</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">增加用户权限管理</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">增加用户仓库</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">增加路由守卫</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">BREAKING CHANGE: 之前登录逻辑已移除</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">closes: #123&quot;</span></span></code></pre></div>`,15),l=[e];function p(h,r,d,o,c,g){return a(),t("div",null,l)}const F=s(n,[["render",p]]);export{u as __pageData,F as default};
